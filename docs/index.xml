<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HortaCloud – Documentation</title><link>https://hortacloud.janelia.org/docs/</link><description>Recent content in Documentation on HortaCloud</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hortacloud.janelia.org/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: AWS Cloud</title><link>https://hortacloud.janelia.org/docs/administration/deployment/aws_cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.janelia.org/docs/administration/deployment/aws_cloud/</guid><description>
&lt;p>The deployment uses AWS CDK to create AWS resources on your AWS account as shown in the diagram below. All services run in a secured Virtual Private Cloud (VPC).&lt;/p>
&lt;a href="../cloud_deployment.png">
&lt;img
src="../cloud_deployment.png"
class="rounded mx-auto d-block"
style="max-width: 700px;"
alt="cloud deployment diagram"/>
&lt;/a>
&lt;h2 id="install-prerequisites">Install prerequisites&lt;/h2>
&lt;p>You should have &lt;strong>node v14&lt;/strong> installed on your local machine. We recommend using &lt;a href="https://github.com/nvm-sh/nvm">nvm&lt;/a> to install and activate this version of node.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Install AWS CLI&lt;/p>
&lt;ul>
&lt;li>AWS CDK requires AWS CLI to be installed and configured on the computer from which one runs the deployment procedure. &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html">Installation&lt;/a> &amp;amp; &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html">configuration&lt;/a> instructions can be found in the AWS documentation.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Install AWS CDK by running&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command will install CDK in a development environment so you can access its help as below (notice the &amp;lsquo;&amp;ndash;&amp;rsquo; separator between cdk and cdk options - this is specific to npm not to cdk so all CDK flags must be after the double hyphen separator):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm run cdk -- --help
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="get-the-deployment-scripts">Get the deployment scripts&lt;/h2>
&lt;p>Clone the repository containing the deployment scripts:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone https://github.com/JaneliaSciComp/hortacloud/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">cd&lt;/span> hortacloud
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the dependencies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm run setup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configure-environment">Configure environment&lt;/h2>
&lt;p>The following values must be set in the &lt;code>.env&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-env" data-lang="env">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">AWS_REGION&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your aws region&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">AWS_ACCOUNT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;your aws account&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">HORTA_ORG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;app qualifier name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">ADMIN_USER_EMAIL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;admin email&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">JACS_JWT_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;a &lt;span style="color:#0000cf;font-weight:bold">32&lt;/span> byte jwt secret&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">JACS_MONGO_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;a &lt;span style="color:#0000cf;font-weight:bold">32&lt;/span> byte mongo secret&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">JACS_APP_PASSWD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;app password&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">RABBITMQ_PASSWD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;rabbitmq password&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">JACS_API_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;jacs api key&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">JADE_API_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;jade api key&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">HORTA_DATA_BUCKETS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;s3 buckets that hold MouseLight data&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The api keys and secrets have been randomly generated during the setup step, but you can generate new ones with the following command:&lt;/p>
&lt;pre tabindex="0">&lt;code>openssl rand -hex 32
&lt;/code>&lt;/pre>&lt;p>We prefer this procedure because these values will be handled during the installation using the &lt;code>sed&lt;/code> command and it is preferable that they not contain any characters that require escaping in a sed command.&lt;/p>
&lt;p>If you already have data on some S3 buckets you can add them to &lt;code>HORTA_DATA_BUCKETS&lt;/code> as a comma separated list. For example, if you want to use Janelia&amp;rsquo;s Open Data bucket but in addition you also have your data on a private bucket (&amp;lsquo;janelia-mouseligh-demo&amp;rsquo; in this example) you need to set &lt;code>HORTA_DATA_BUCKETS=&amp;quot;janelia-mouselight-imagery,janelia-mouselight-demo&amp;quot;&lt;/code>. Currently it is set to Janelia&amp;rsquo;s open data MouseLight bucket only. Every bucket specified in the &amp;lsquo;HORTA_DATA_BUCKETS&amp;rsquo; list will be available in the workstation as &lt;code>/&amp;lt;s3BucketName&amp;gt;&lt;/code> directory.&lt;/p>
&lt;p>If you want to change the setting for &lt;code>HORTA_WS_INSTANCE_TYPE&lt;/code>, keep in mind that you may have to change &lt;code>HORTA_WS_IMAGE_NAME&lt;/code>
For &lt;code>HORTA_WS_INSTANCE_TYPE&lt;/code> set to any &lt;code>stream.graphics.g4dn.*&lt;/code> instances:&lt;/p>
&lt;ul>
&lt;li>&lt;code>stream.graphics.g4dn.xlarge&lt;/code>&lt;/li>
&lt;li>&lt;code>stream.graphics.g4dn.2xlarge&lt;/code>&lt;/li>
&lt;li>&lt;code>stream.graphics.g4dn.4xlarge&lt;/code>&lt;/li>
&lt;li>&lt;code>stream.graphics.g4dn.8xlarge&lt;/code>&lt;/li>
&lt;li>&lt;code>stream.graphics.g4dn.12xlarge&lt;/code>&lt;/li>
&lt;li>&lt;code>stream.graphics.g4dn.16xlarge&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>use: &lt;code>HORTA_WS_IMAGE_NAME=AppStream-Graphics-G4dn-WinServer2019-07-19-2021&lt;/code> image.&lt;/p>
&lt;p>For &lt;code>HORTA_WS_INSTANCE_TYPE&lt;/code> set to any &lt;code>stream.graphics-pro.*&lt;/code> instances:&lt;/p>
&lt;ul>
&lt;li>&lt;code>stream.graphics-pro.4xlarge&lt;/code>&lt;/li>
&lt;li>&lt;code>stream.graphics-pro.8xlarge&lt;/code>&lt;/li>
&lt;li>&lt;code>stream.graphics-pro.16xlarge&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>use &lt;code>HORTA_WS_IMAGE_NAME=AppStream-Graphics-Pro-WinServer2019-10-08-2021&lt;/code> image&lt;/p>
&lt;h2 id="configure-aws-account">Configure AWS account&lt;/h2>
&lt;h3 id="iam-required-roles">IAM Required Roles&lt;/h3>
&lt;p>In order to create an AppStream Image Builder, which is needed to create the Workstation Image, you need to have all &lt;a href="https://docs.aws.amazon.com/appstream2/latest/developerguide/roles-required-for-appstream.html">roles required by AppStream&lt;/a>. Check that by simply connecting to the AWS console and check if the Roles are available in the IAM Service - select &amp;ldquo;Services&amp;rdquo; &amp;gt; &amp;ldquo;Security, Identity, Compliance&amp;rdquo; &amp;gt; &amp;ldquo;IAM&amp;rdquo; then verify that the required roles are present:&lt;/p>
&lt;ul>
&lt;li>AmazonAppStreamServiceAccess&lt;/li>
&lt;li>ApplicationAutoScalingForAmazonAppStreamAccess&lt;/li>
&lt;li>AWSServiceRoleForApplicationAutoScaling_AppStreamFleet&lt;/li>
&lt;/ul>
&lt;h3 id="aws-limits">AWS Limits&lt;/h3>
&lt;p>Most AWS services allow you to setup restrictions on the number of active instances. The default limits, especially for some AppStream resources, such as &amp;ldquo;Maximum ImageBuilders&amp;rdquo; for some graphics instances - &amp;ldquo;stream.graphics.g4dn.xlarge&amp;rdquo; may be really low (0 in some cases). Connect to AWS console &amp;ldquo;Service Quotas&amp;rdquo; service and increase the limit for in case you see a &lt;code>limit was exceeded&lt;/code> error. Typically take a look at the limits setup for your account for EC2, VPC, AppStream, S3. Keep in mind that limits may be different from instance type to instance type for AppStream service, so you may have to adjust the limits based on the AppStream instance type selection.&lt;/p>
&lt;h2 id="deploy-hortacloud-services-to-aws">Deploy HortaCloud services to AWS&lt;/h2>
&lt;p>After the setup is complete, deploy the application by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm run deploy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are a few steps during the deployment that require manual intervention. The deploy script will indicate when these steps should be taken with a ⚠️ warning message.&lt;/p>
&lt;p>The full deployment of the application is done in 3 steps run automatically one after the other, but the second step requires manual intervention:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Deploy the back-end stacks&lt;/strong> - this includes the AppStream builder. At the back end deployment the installation process will also create the admin user configured in &lt;code>ADMIN_USER_EMAIL&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Connect to AppStream builder and install the workstation application&lt;/strong> - This is a semiautomated step that involves copying and running two PowerShell scripts onto the AppStream builder instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Deploy the user login and administration stack.&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="workstation-app-installation">Workstation app installation&lt;/h3>
&lt;p>For client installation start and connect to the AppStream builder instance then copy the following scripts from this repo to the AppStream instance:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="vpc_stack/src/asbuilder/installcmd.ps1">installcmd.ps1&lt;/a> - installs JDK and the workstation&lt;/li>
&lt;li>&lt;a href="vpc_stack/src/asbuilder/createappimage.ps1">createappimage.ps1&lt;/a> - creates the AppStream image&lt;/li>
&lt;/ul>
&lt;p>After you copied or created the scripts:&lt;/p>
&lt;ul>
&lt;li>Log in to the AWS console and go to &lt;a href="https://console.aws.amazon.com/appstream2">https://console.aws.amazon.com/appstream2&lt;/a>&lt;/li>
&lt;li>Find your new builder in the &amp;ldquo;Images &amp;gt; Image Builder&amp;rdquo; tab&lt;/li>
&lt;li>Click on the image name and open an &amp;ldquo;Administrator&amp;rdquo; window by clicking on the &amp;ldquo;Connect&amp;rdquo; button.&lt;/li>
&lt;li>Copy the installation scripts from your local machine to AppStream:
&lt;ul>
&lt;li>Click on the folder icon at the top left of the window&lt;/li>
&lt;li>Select the &lt;code>Temporary Files&lt;/code> folder&lt;/li>
&lt;li>Use the &lt;code>Upload Files&lt;/code> icon to find the files on your machine and upload them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Open the powershell by typing &amp;ldquo;`Power shell&amp;rdquo; in the search found at the bottom left of the window. This step used to require an &amp;ldquo;Administrator Power Shell&amp;rdquo; but now it needs only a regular user power shell and it may actually fail the install if you run it in an Administrator Power Shell.&lt;/li>
&lt;li>Change to the directory where you uploaded the installation scripts, eg:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-windows" data-lang="windows">cd &amp;#39;C:\Users\ImagebuilderAdmin\My Files\Temporary Files&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Run the installcmd script to install the workstation. &amp;lt;serverName&amp;gt; is the name of the backend EC2 instance, typically it looks like &lt;code>ip-&amp;lt;ip4 with dashes instead of dots&amp;gt;.ec2.internal&lt;/code>. Instructions for locating this are provided as output from the installer script.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-windows" data-lang="windows">installcmd.ps1 &amp;lt;serverName&amp;gt;
&lt;/code>&lt;/pre>&lt;p>This will install the JDK and the workstation. The installer will run silently and it will install the workstation under the &lt;code>C:\apps&lt;/code> folder. If it prompts you for the install directory, select &lt;code>C:\apps&lt;/code> as the JaneliaWorkstation location.&lt;/p>
&lt;ul>
&lt;li>&lt;em>Optional&lt;/em> - To start the workstation for testing, run:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-windows" data-lang="windows">c:\apps\runJaneliaWorkstation.ps1
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>when prompted, login as the admin user you set in ADMIN_USER_EMAIL (leave the password empty)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Navigate through the menus to make sure the workstation is working. &lt;em>Do not create any user accounts at this time as they will get created from the Admin web application.&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When testing is finished, close down the workstation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Finalize the creation of the AppStream image, run:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-windows" data-lang="windows">createappimage.ps1
&lt;/code>&lt;/pre>&lt;p>Keep in mind that once you start this step the builder instance begins the snap shotting process and it will not be usable until it completes. After this is completed the AppStream image should be available and the builder will be in a stop state. To use it again you need to start it and then you can connect.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>You can now safely close the AppStream session and return to the AppStream console. There you will see a new image in the image registry with a status of &lt;code>Pending&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once the image status has changed to a status of &lt;code>Available&lt;/code> you can start the fleet by going to the &lt;code>Fleets&lt;/code> page on the AppStream site.&lt;/p>
&lt;ul>
&lt;li>Select your fleet from the list of fleets and then select &amp;lsquo;Start&amp;rsquo; from the &lt;code>Action&lt;/code> menu.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>At this point the installation script you started on your host machine, should continue to completion.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: Getting started</title><link>https://hortacloud.janelia.org/docs/development/getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.janelia.org/docs/development/getting_started/</guid><description/></item><item><title>Docs: Single server</title><link>https://hortacloud.janelia.org/docs/administration/deployment/single_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.janelia.org/docs/administration/deployment/single_server/</guid><description/></item><item><title>Docs: Contribution guidelines</title><link>https://hortacloud.janelia.org/docs/development/contribution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.janelia.org/docs/development/contribution/</guid><description/></item><item><title>Docs: Operation</title><link>https://hortacloud.janelia.org/docs/administration/operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.janelia.org/docs/administration/operations/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>We are in the process of building out this documentation.&lt;/p>
&lt;/div></description></item></channel></rss>