<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bare metal on HortaCloud</title><link>https://hortacloud.org/docs/administration/bare_metal/</link><description>Recent content in Bare metal on HortaCloud</description><generator>Hugo</generator><language>en</language><atom:link href="https://hortacloud.org/docs/administration/bare_metal/index.xml" rel="self" type="application/rss+xml"/><item><title>Two-server deployment</title><link>https://hortacloud.org/docs/administration/bare_metal/twoserverdeployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/twoserverdeployment/</guid><description>&lt;p>This document describes the canonical two-server Janelia Workstation deployment for supporting neuron tracing for the &lt;a href="https://www.janelia.org/project-team/mouselight">MouseLight project&lt;/a> at the Janelia Research Campus and other research institutions. This deployment uses Docker Swarm to orchestrate prebuilt containers available on Docker Hub.&lt;/p>
&lt;h2 id="deployment-diagram">Deployment Diagram&lt;/h2>

&lt;a href="../TwoServerDeployment.png">
 &lt;img 
 src="../TwoServerDeployment.png"
 class="rounded mx-auto"
 style="max-width: 700px;" 
 
 alt="two-server deployment diagram"/>
&lt;/a>
&lt;h2 id="hardware-setup">Hardware Setup&lt;/h2>
&lt;p>The JACS backend consists of several services which need to be deployed on server hardware. We have tested the following configuration:&lt;/p>
&lt;ul>
&lt;li>Two Dell PowerEdge R740XD Servers
&lt;ul>
&lt;li>Each server has 40 cores (e.g. Intel Xeon Gold 6148 2.4G)&lt;/li>
&lt;li>Each server has 192 GB of memory&lt;/li>
&lt;li>The hard drives are configured as follows:
&lt;ul>
&lt;li>2 x 200GB SSD in RAID1 - Operating system (/)&lt;/li>
&lt;li>2 x 960GB SSD in RAID1 - Databases, user preferences, etc. (/opt)&lt;/li>
&lt;li>12 x 10TB in RAID6 - Image files (/data)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>The rest of this guide assumes that you have two server hosts dedicated to deploying this system, which are configured as listed above. They will be referred to as &lt;strong>HOST1&lt;/strong> and &lt;strong>HOST2&lt;/strong>.&lt;/p></description></item><item><title>Three-server deployment</title><link>https://hortacloud.org/docs/administration/bare_metal/fulldeployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/fulldeployment/</guid><description>&lt;p>This document describes the full three-server Janelia Workstation deployment for supporting both FlyLight and MouseLight at Janelia Research Campus. This deployment uses Docker Swarm to orchestrate containers available on Docker Hub.&lt;/p>
&lt;p>Multiple &lt;em>environments&lt;/em> are supported with this deployment:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>prod&lt;/strong>&lt;/li>
&lt;li>&lt;strong>dev&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="deployment-diagram">Deployment Diagram&lt;/h2>

&lt;a href="../FullDeployment.png">
 &lt;img 
 src="../FullDeployment.png"
 class="rounded mx-auto"
 style="max-width: 700px;" 
 
 alt="three-server deployment diagram"/>
&lt;/a>
&lt;h2 id="hardware-setup">Hardware Setup&lt;/h2>
&lt;p>This guide assumes that you have three high-end servers which can be dedicated to running Docker Swarm. We use 40-core servers with at least 192 GB of RAM. YMMV.&lt;/p></description></item><item><title>Installing Docker</title><link>https://hortacloud.org/docs/administration/bare_metal/installingdocker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/installingdocker/</guid><description>&lt;p>To install Docker on a server running Oracle Linux 8, some special configuration is needed. Much of this comes from the &lt;a href="https://docs.docker.com/install/linux/docker-ce/centos/">official documentation&lt;/a>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>First, make sure that Docker isnâ€™t already installed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>yum list installed &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove any existing installations before proceeding.&lt;/p>
&lt;p>Ensure that /opt (or whatever disk is to be used for Docker data) is formatted with the d_type option. You can find out like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ xfs_info /opt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meta-data&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/mapper/vg0-lv_opt &lt;span style="color:#000">isize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">512&lt;/span> &lt;span style="color:#000">agcount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>4, &lt;span style="color:#000">agsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5701632&lt;/span> &lt;span style="color:#000">blks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sectsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">attr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>2, &lt;span style="color:#000">projid32bit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">crc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">finobt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000">spinodes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>22806528, &lt;span style="color:#000">imaxpct&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">25&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sunit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000">swidth&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> blks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">naming&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>version &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> ascii-ci&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000">ftype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">log&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>internal &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>11136, &lt;span style="color:#000">version&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sectsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">sunit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> blks, lazy-count&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">realtime&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>none &lt;span style="color:#000">extsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>0, &lt;span style="color:#000">rtextents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the above says ftype=0, then the filesystem will need to be recreated (&lt;a href="https://linuxer.pro/2017/03/what-is-d_type-and-why-docker-overlayfs-need-it/">reference&lt;/a>).&lt;/p></description></item><item><title>Deploying JACS</title><link>https://hortacloud.org/docs/administration/bare_metal/swarmdeployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/swarmdeployment/</guid><description>&lt;p>This document assumes that you have downloaded and configured the installer according to one of the deployment guides.&lt;/p>
&lt;p>The following steps are common to all Docker Swarm deployments of the Workstation.&lt;/p>
&lt;h2 id="initialize-filesystems">Initialize Filesystems&lt;/h2>
&lt;p>The first step is to initialize the filesystems on all your Swarm systems. On each server, ensure that your &lt;code>REDUNDANT_STORAGE&lt;/code> (default: /opt/jacs), &lt;code>NON_REDUNDANT_STORAGE&lt;/code> (default: /data) directories exist and can be written to by your UNAME:GNAME user (default: docker-nobody).&lt;/p></description></item><item><title>Deploying ELK</title><link>https://hortacloud.org/docs/administration/bare_metal/elkdeployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/elkdeployment/</guid><description>&lt;p>Currently ELK is only available in a swarm deployment because of how the ELK stack is configured.&lt;/p>
&lt;p>Most of the set up necessary for ELK - configuration files and/or data directories - is already done as part of filesystem initialization performed while executing:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./manage.sh init-filesystems
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The current ELK data directories are created on &lt;code>/data/&lt;/code> directory so this directory must exist.&lt;/p>
&lt;p>One manual step is to set the &lt;code>vm.max_map_count&lt;/code> value required for running elasticsearch. This is done by adding &lt;code>vm.max_map_count=262144&lt;/code> line to &lt;code>/etc/sysctl.conf&lt;/code> and then run &lt;code>sysctl -p&lt;/code> (typically this must be done as root)&lt;/p></description></item><item><title>Self-signed Certificates</title><link>https://hortacloud.org/docs/administration/bare_metal/selfsignedcerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/selfsignedcerts/</guid><description>&lt;p>A self-signed certificate is automatically generated during the &lt;code>init-filesystem&lt;/code> step of a jacs-cm installation. For production use, it is recommended that you replace this certificate with a real one. The self-signed certificate is less secure, and it requires some extra steps to get working.&lt;/p>
&lt;p>In order to connect to &lt;a href="https://HOST1">https://HOST1&lt;/a>, you need to accept the certificate in the browser. This differs by browser.&lt;/p>
&lt;p>Then, in order to allow the Workstation to accept the certificate, it needs to be added to Java&amp;rsquo;s keystore. For this, you will need the certificate on the desktop computer where you are running the Workstation. You can either export it from the browser, or copy it over from the server. On the server, it is located in &lt;code>$CONFIG_DIR/certs/cert.crt&lt;/code>. Once you have the certificate, you can import it using Java&amp;rsquo;s keytool.&lt;/p></description></item><item><title>Storage volumes</title><link>https://hortacloud.org/docs/administration/bare_metal/storagevolumes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/storagevolumes/</guid><description>&lt;p>The Workstation/JACS system relies on JADE for its storage API.&lt;/p>
&lt;h2 id="adding-a-new-storage-volume">Adding a new Storage Volume&lt;/h2>
&lt;p>&lt;strong>Add bootstrap to the JADE configuration&lt;/strong>&lt;/p>
&lt;p>On HOST1, edit /opt/jacs/config/jade/config.properties and add a block for your new volume, for example:&lt;/p>
&lt;pre tabindex="0">&lt;code>StorageVolume.s3data.RootDir=/s3data
StorageVolume.s3data.VirtualPath=/s3jade
StorageVolume.s3data.Shared=true
StorageVolume.s3data.Tags=aws,cloud
StorageVolume.s3data.VolumePermissions=READ,WRITE,DELETE
&lt;/code>&lt;/pre>&lt;p>The properties configure the volume as follows:&lt;/p>
&lt;ul>
&lt;li>RootDir: defines the actual path to the data on disk&lt;/li>
&lt;li>VirtualPath: optionally defines a virtual path which is mapped to the actual path&lt;/li>
&lt;li>Shared: true if the volume should be accessible to all volumes&lt;/li>
&lt;li>Tags: tags used by applications to find appropriate volumes&lt;/li>
&lt;li>VolumePermissions: list of operations that JADE can execute (READ,WRITE,DELETE)&lt;/li>
&lt;/ul>
&lt;p>Also add your volume to StorageAgent.BootstrappedVolumes, so that it will be created the next time the service is restarted.&lt;/p></description></item><item><title>Data import</title><link>https://hortacloud.org/docs/administration/bare_metal/dataimport/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/dataimport/</guid><description>&lt;p>In principle, any 3d volumetric data can be imported into the MouseLight Workstation.
At this moment we only provide some very basic tools for converting only TIFF format images into the expected format on disk. Another limitation of the current tools is that the entire volume must be in a single tiff file (per channel)&lt;/p>
&lt;p>The imagery for MouseLight Workstation is a directory containing TIFF and KTX images organized into octrees. JACS compute includes a a service that can generate the octree data from a single volume TIFF file. If there is more than 1 channel, the channels are numbered 0 .. n-1 and each channel is expected to be in its own file. For example if you have 2 channels you would have two tiff files:&lt;/p></description></item><item><title>Troubleshooting</title><link>https://hortacloud.org/docs/administration/bare_metal/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hortacloud.org/docs/administration/bare_metal/troubleshooting/</guid><description>&lt;h2 id="docker">Docker&lt;/h2>
&lt;p>These are some useful commands for troubleshooting Docker:&lt;/p>
&lt;p>View logs for Docker daemon&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo journalctl -fu docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart the Docker daemon&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl restart docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove all Docker objects, including unused containers/networks/etc.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo docker system prune -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="swarm-gui">Swarm GUI&lt;/h2>
&lt;p>If you would like to see the Swarm&amp;rsquo;s status in a web-based GUI, we recommend installing &lt;a href="https://swarmpit.io">Swarmpit&lt;/a>. It&amp;rsquo;s a single command to deploy, and it works well with the JACS stack.&lt;/p></description></item></channel></rss>